- id: 'close half at night'
  alias: Cover close half at night
  trigger:
    platform: sun
    event: sunset
    offset: "+00:00:00"
  condition:
    condition: template
    value_template: "{{ (states.input_number.window_position.state | int)  == 27 }}"
  action:
    - delay: 00:00:01
    - service: input_number.set_value
      data:
        entity_id: input_number.window_set_position
        value: 65

- id: 'close at night on winter'
  alias: Cover close at night on winter
  trigger:
    platform: sun
    event: sunset
    offset: "+00:30:00"
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: cover.bedroom_cover
      state: open
    - condition: state
      entity_id: input_boolean.winter_mode
      state: 'on'
    - condition: state
      entity_id: binary_sensor.door_window_sensor_158d000276bedc #bedroom
      state: 'off'
  action:
  - service: cover.close_cover
    data:
      entity_id: cover.bedroom_cover

- id: 'close at night'
  alias: Cover close at night
  trigger:
    platform: sun
    event: sunset
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: cover.bedroom_cover
      state: open
    - condition: state
      entity_id: input_boolean.winter_mode
      state: 'off'
    - condition: state
      entity_id: binary_sensor.door_window_sensor_158d000276bedc #bedroom
      state: 'off'
  action:
  - service: cover.close_cover
    data:
      entity_id: cover.bedroom_cover

- id: 'close when door closed'
  alias: Cover close with door
  trigger:
    - platform: state
      entity_id: binary_sensor.door_window_sensor_158d000276bedc #bedroom
      from: 'on'
      to: 'off'
      for:
        hours: 0
        minutes: 0
        seconds: 10
  condition:
    condition: and
    conditions:
    - condition: state  # from sunset until sunrise
      entity_id: sun.sun
      state: 'below_horizon'
    - condition: state
      entity_id: cover.bedroom_cover
      state: open
  action:
  - service: cover.close_cover
    data:
      entity_id: cover.bedroom_cover

- id: 'set position to 100'
  alias: set position to 100
  trigger:
    platform: state
    entity_id: input_number.window_position
  condition:
    condition: template
    value_template: "{{ (states.input_number.window_position.state | int)  == 27 }}"
  action:
  - service: input_number.set_value
    data:
      entity_id: input_number.window_set_position
      value: 100

- id: 'set position to 0'
  alias: set position to 0
  trigger:
    platform: state
    entity_id: input_number.window_position
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: "{{ (states.input_number.window_position.state | int)  == 0 }}"
    - condition: template
      value_template: "{{ (states.input_number.window_set_position.state | int)  != 0 }}"
  action:
  - service: input_number.set_value
    data:
      entity_id: input_number.window_set_position
      value: 0

- id: 'little opening'
  alias: little opening one touch
  trigger:
  - payload: 'ON'
    platform: mqtt
    topic: stat/sonoff_cover_bedroom/POWER1
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: "{{ (states.input_number.window_position.state | int)  == 0 }}"
    - condition: template
      value_template: "{{ (states.input_number.window_set_position.state | int)  == 0 }}"
  action:
    - delay: 00:00:01
    - service: input_number.set_value
      data:
        entity_id: input_number.window_set_position
        value: 55

- id: 'bedroom1'
  alias: Cover MQTT Button1 OFF (up)
  trigger:
  - payload: 'OFF'
    platform: mqtt
    topic: stat/sonoff_cover_bedroom/POWER1
  action:
  - service: timer.cancel
    entity_id: timer.window_up

- id: 'bedroom2'
  alias: Cover MQTT Button2 OFF (down)
  trigger:
  - payload: 'OFF'
    platform: mqtt
    topic: stat/sonoff_cover_bedroom/POWER2
  action:
  - service: timer.cancel
    entity_id: timer.window_down

- id: 'bedroom3'
  alias: Cover Timer stopped
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.window_up
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.window_down
  action:
  - service: cover.stop_cover
    data:
      entity_id: cover.bedroom_cover

- id: 'bedroom4'
  alias: Cover MQTT Button1 ON (up)
  trigger:
  - payload: 'ON'
    platform: mqtt
    topic: stat/sonoff_cover_bedroom/POWER1
  condition:
    condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.input_number.window_set_position.last_updated) > 3 }}'
  action:
  - service: timer.start
    data:
      duration: 00:00:27
    entity_id: timer.window_up

- id: 'bedroom5'
  alias: Cover MQTT Button2 ON (down)
  trigger:
  - payload: 'ON'
    platform: mqtt
    topic: stat/sonoff_cover_bedroom/POWER2
  condition:
    condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.input_number.window_set_position.last_updated) > 3 }}'
  action:
  - service: timer.start
    data:
      duration: 00:00:27
    entity_id: timer.window_down

- id: 'bedroom6'
  alias: Cover Position UP
  trigger:
    platform: time_pattern
    seconds: '/1'
  condition:
    condition: state
    entity_id: 'timer.window_up'
    state: 'active'
  action:
  - service: input_number.set_value
    data_template:
      entity_id: input_number.window_position
      value: >-
        {% if (states.input_number.window_position.state | int) < 27 %}
          {{ (states.input_number.window_position.state | int) + 1 }}
        {% else %}
          27 
        {% endif %}

- id: 'bedroom7'
  alias: Cover Position Down
  trigger:
    platform: time_pattern
    seconds: '/1'
  condition:
    condition: state
    entity_id: 'timer.window_down'
    state: 'active'
  action:
  - service: input_number.set_value
    data_template:
      entity_id: input_number.window_position
      value: >-
        {% if (states.input_number.window_position.state | int) > 1 %}
          {{ (states.input_number.window_position.state | int) - 1 }}
        {% else %}
          0
        {% endif %}

- id: 'bedroom8'
  alias: Cover Set Position Down
  trigger:
    platform: state
    entity_id: input_number.window_set_position
  condition:
    condition: template
    value_template: "{{ (states.input_number.window_position.state | int) > ((((states.input_number.window_set_position.state | int ) * 27 )/100) | int) }}"
  action:
  - service: timer.start
    data_template:
      entity_id: timer.window_down
      duration: "{{ '00:00:%02d' | format( ((states.input_number.window_position.state | int) - ((((states.input_number.window_set_position.state | int ) * 27 )/100) | int) ) | abs ) }}"
  - service: cover.close_cover
    data:
      entity_id: cover.bedroom_cover

- id: 'bedroom9'
  alias: Cover Set Position UP
  trigger:
    platform: state
    entity_id: input_number.window_set_position
  condition:
    condition: template
    value_template: "{{ (states.input_number.window_position.state | int) < ((((states.input_number.window_set_position.state | int ) * 27 )/100) | int) }}"
  action:
  - service: timer.start
    data_template:
      entity_id: timer.window_up
      duration: "{{ '00:00:%02d' | format( ((states.input_number.window_position.state | int) - ((((states.input_number.window_set_position.state | int ) * 27 )/100) | int) ) | abs ) }}"
  - service: cover.open_cover
    data:
      entity_id: cover.bedroom_cover